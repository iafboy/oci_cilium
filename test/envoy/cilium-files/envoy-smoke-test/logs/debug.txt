+ trap finish_test EXIT
+ SERVER_LABEL=id.server
+ CLIENT_LABEL=id.client
+ SVC_IP=f00d::1:1
+ SVC_IP4=10.0.0.2
+ cleanup
+ monitor_stop
+ local save=ehxB
+ set +e
+ '[' '!' -z '' ']'
+ restore_flag ehxB e
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=e
+ [[ ehxB =~ e ]]
+ set -e
+ echo 'Tip: Add '\''--debug-verbose=flow'\'' into cilium options in /etc/sysconfig/cilium to get Envoy debug logging.'
+ logs_clear
++ date '+%F %T'
+ LAST_LOG_DATE='2023-01-28 07:54:30'
+ proxy_init
+ log 'beginning proxy_init'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='beginning proxy_init'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_init'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_init: beginning proxy_init'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ create_cilium_docker_network
+ log 'creating Docker network of type Cilium'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='creating Docker network of type Cilium'
+ local stack
+ (( i=4-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_init'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main/proxy_init == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_init/create_cilium_docker_network'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_init/create_cilium_docker_network: creating Docker network of type Cilium'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ docker network inspect cilium
+ docker network create --ipv6 --subnet ::1/112 --ipam-driver cilium --driver cilium cilium
++ docker ps -q -f 'name=^/server1$'
+ '[' -z ']'
+ docker run -dt --net=cilium --name server1 -l id.server -v /home/vagrant/go/src/github.com/cilium/cilium/test/envoy/testsite:/usr/local/apache2/htdocs/ httpd
++ docker ps -q -f 'name=^/server2$'
+ '[' -z ']'
+ docker run -dt --net=cilium --name server2 -l id.server -v /home/vagrant/go/src/github.com/cilium/cilium/test/envoy/testsite:/usr/local/apache2/htdocs/ httpd
++ docker ps -q -f 'name=^/client$'
+ '[' -z ']'
+ docker run -dt --net=cilium --name client -l id.client curlimages/curl -s --retry-connrefused --retry-delay 1000000 --retry 5 127.242.139.58:967
++ docker inspect --format '{{ .NetworkSettings.Networks.cilium.GlobalIPv6Address }}' server1
+ SERVER1_IP=f00d::a0f:0:0:e884
++ docker inspect --format '{{ .NetworkSettings.Networks.cilium.GlobalIPv6Address }}' server2
+ SERVER2_IP=f00d::a0f:0:0:450b
++ docker inspect --format '{{ .NetworkSettings.Networks.cilium.IPAddress }}' server1
+ SERVER1_IP4=10.15.182.66
++ docker inspect --format '{{ .NetworkSettings.Networks.cilium.IPAddress }}' server2
+ SERVER2_IP4=10.15.57.88
+ SERVER_IP=f00d::a0f:0:0:e884
+ SERVER_IP4=10.15.182.66
+ wait_for_docker_ipv6_addr server1
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ name=server1
+ wait_specified_time_test 'test "$(docker inspect --format '\''{{ .NetworkSettings.Networks.cilium.GlobalIPv6Address }}'\'' server1)" != ""' 2
+ local save=ehxB
+ set +e
+ local 'CMD=test "$(docker inspect --format '\''{{ .NetworkSettings.Networks.cilium.GlobalIPv6Address }}'\'' server1)" != ""'
+ local MAX_MINS=2
+ local sleep_time=1
+ local iter=0
+ log 'waiting for at most 2 minutes for command test "$(docker inspect --format '\''{{ .NetworkSettings.Networks.cilium.GlobalIPv6Address }}'\'' server1)" != "" to succeed'
+ local save=hxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='waiting for at most 2 minutes for command test "$(docker inspect --format '\''{{ .NetworkSettings.Networks.cilium.GlobalIPv6Address }}'\'' server1)" != "" to succeed'
+ local stack
+ (( i=5-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_init'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main/proxy_init == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_init/wait_for_docker_ipv6_addr'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main/proxy_init/wait_for_docker_ipv6_addr == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_init/wait_for_docker_ipv6_addr/wait_specified_time_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_init/wait_for_docker_ipv6_addr/wait_specified_time_test: waiting for at most 2 minutes for command test "$(docker inspect --format '\''{{ .NetworkSettings.Networks.cilium.GlobalIPv6Address }}'\'' server1)" != "" to succeed'
+ restore_flag hxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=hxB
+ local flag=u
+ [[ hxB =~ u ]]
+ [[ 0 -lt 120 ]]
+ eval 'test "$(docker inspect --format '\''{{ .NetworkSettings.Networks.cilium.GlobalIPv6Address }}'\'' server1)" != ""'
+++ docker inspect --format '{{ .NetworkSettings.Networks.cilium.GlobalIPv6Address }}' server1
++ test f00d::a0f:0:0:e884 '!=' ''
+ log 'test "$(docker inspect --format '\''{{ .NetworkSettings.Networks.cilium.GlobalIPv6Address }}'\'' server1)" != "" succeeded'
+ local save=hxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='test "$(docker inspect --format '\''{{ .NetworkSettings.Networks.cilium.GlobalIPv6Address }}'\'' server1)" != "" succeeded'
+ local stack
+ (( i=5-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_init'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main/proxy_init == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_init/wait_for_docker_ipv6_addr'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main/proxy_init/wait_for_docker_ipv6_addr == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_init/wait_for_docker_ipv6_addr/wait_specified_time_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_init/wait_for_docker_ipv6_addr/wait_specified_time_test: test "$(docker inspect --format '\''{{ .NetworkSettings.Networks.cilium.GlobalIPv6Address }}'\'' server1)" != "" succeeded'
+ restore_flag hxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=hxB
+ local flag=u
+ [[ hxB =~ u ]]
+ break
+ [[ 0 -ge 120 ]]
+ log 'test "$(docker inspect --format '\''{{ .NetworkSettings.Networks.cilium.GlobalIPv6Address }}'\'' server1)" != "" succeeded'
+ local save=hxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='test "$(docker inspect --format '\''{{ .NetworkSettings.Networks.cilium.GlobalIPv6Address }}'\'' server1)" != "" succeeded'
+ local stack
+ (( i=5-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_init'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main/proxy_init == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_init/wait_for_docker_ipv6_addr'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main/proxy_init/wait_for_docker_ipv6_addr == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_init/wait_for_docker_ipv6_addr/wait_specified_time_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_init/wait_for_docker_ipv6_addr/wait_specified_time_test: test "$(docker inspect --format '\''{{ .NetworkSettings.Networks.cilium.GlobalIPv6Address }}'\'' server1)" != "" succeeded'
+ restore_flag hxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=hxB
+ local flag=u
+ [[ hxB =~ u ]]
+ restore_flag ehxB e
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=e
+ [[ ehxB =~ e ]]
+ set -e
+ wait_for_docker_ipv6_addr server2
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ name=server2
+ wait_specified_time_test 'test "$(docker inspect --format '\''{{ .NetworkSettings.Networks.cilium.GlobalIPv6Address }}'\'' server2)" != ""' 2
+ local save=ehxB
+ set +e
+ local 'CMD=test "$(docker inspect --format '\''{{ .NetworkSettings.Networks.cilium.GlobalIPv6Address }}'\'' server2)" != ""'
+ local MAX_MINS=2
+ local sleep_time=1
+ local iter=0
+ log 'waiting for at most 2 minutes for command test "$(docker inspect --format '\''{{ .NetworkSettings.Networks.cilium.GlobalIPv6Address }}'\'' server2)" != "" to succeed'
+ local save=hxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='waiting for at most 2 minutes for command test "$(docker inspect --format '\''{{ .NetworkSettings.Networks.cilium.GlobalIPv6Address }}'\'' server2)" != "" to succeed'
+ local stack
+ (( i=5-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_init'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main/proxy_init == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_init/wait_for_docker_ipv6_addr'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main/proxy_init/wait_for_docker_ipv6_addr == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_init/wait_for_docker_ipv6_addr/wait_specified_time_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_init/wait_for_docker_ipv6_addr/wait_specified_time_test: waiting for at most 2 minutes for command test "$(docker inspect --format '\''{{ .NetworkSettings.Networks.cilium.GlobalIPv6Address }}'\'' server2)" != "" to succeed'
+ restore_flag hxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=hxB
+ local flag=u
+ [[ hxB =~ u ]]
+ [[ 0 -lt 120 ]]
+ eval 'test "$(docker inspect --format '\''{{ .NetworkSettings.Networks.cilium.GlobalIPv6Address }}'\'' server2)" != ""'
+++ docker inspect --format '{{ .NetworkSettings.Networks.cilium.GlobalIPv6Address }}' server2
++ test f00d::a0f:0:0:450b '!=' ''
+ log 'test "$(docker inspect --format '\''{{ .NetworkSettings.Networks.cilium.GlobalIPv6Address }}'\'' server2)" != "" succeeded'
+ local save=hxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='test "$(docker inspect --format '\''{{ .NetworkSettings.Networks.cilium.GlobalIPv6Address }}'\'' server2)" != "" succeeded'
+ local stack
+ (( i=5-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_init'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main/proxy_init == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_init/wait_for_docker_ipv6_addr'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main/proxy_init/wait_for_docker_ipv6_addr == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_init/wait_for_docker_ipv6_addr/wait_specified_time_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_init/wait_for_docker_ipv6_addr/wait_specified_time_test: test "$(docker inspect --format '\''{{ .NetworkSettings.Networks.cilium.GlobalIPv6Address }}'\'' server2)" != "" succeeded'
+ restore_flag hxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=hxB
+ local flag=u
+ [[ hxB =~ u ]]
+ break
+ [[ 0 -ge 120 ]]
+ log 'test "$(docker inspect --format '\''{{ .NetworkSettings.Networks.cilium.GlobalIPv6Address }}'\'' server2)" != "" succeeded'
+ local save=hxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='test "$(docker inspect --format '\''{{ .NetworkSettings.Networks.cilium.GlobalIPv6Address }}'\'' server2)" != "" succeeded'
+ local stack
+ (( i=5-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_init'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main/proxy_init == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_init/wait_for_docker_ipv6_addr'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main/proxy_init/wait_for_docker_ipv6_addr == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_init/wait_for_docker_ipv6_addr/wait_specified_time_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_init/wait_for_docker_ipv6_addr/wait_specified_time_test: test "$(docker inspect --format '\''{{ .NetworkSettings.Networks.cilium.GlobalIPv6Address }}'\'' server2)" != "" succeeded'
+ restore_flag hxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=hxB
+ local flag=u
+ [[ hxB =~ u ]]
+ restore_flag ehxB e
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=e
+ [[ ehxB =~ e ]]
+ set -e
+ wait_for_docker_ipv6_addr client
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ name=client
+ wait_specified_time_test 'test "$(docker inspect --format '\''{{ .NetworkSettings.Networks.cilium.GlobalIPv6Address }}'\'' client)" != ""' 2
+ local save=ehxB
+ set +e
+ local 'CMD=test "$(docker inspect --format '\''{{ .NetworkSettings.Networks.cilium.GlobalIPv6Address }}'\'' client)" != ""'
+ local MAX_MINS=2
+ local sleep_time=1
+ local iter=0
+ log 'waiting for at most 2 minutes for command test "$(docker inspect --format '\''{{ .NetworkSettings.Networks.cilium.GlobalIPv6Address }}'\'' client)" != "" to succeed'
+ local save=hxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='waiting for at most 2 minutes for command test "$(docker inspect --format '\''{{ .NetworkSettings.Networks.cilium.GlobalIPv6Address }}'\'' client)" != "" to succeed'
+ local stack
+ (( i=5-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_init'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main/proxy_init == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_init/wait_for_docker_ipv6_addr'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main/proxy_init/wait_for_docker_ipv6_addr == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_init/wait_for_docker_ipv6_addr/wait_specified_time_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_init/wait_for_docker_ipv6_addr/wait_specified_time_test: waiting for at most 2 minutes for command test "$(docker inspect --format '\''{{ .NetworkSettings.Networks.cilium.GlobalIPv6Address }}'\'' client)" != "" to succeed'
+ restore_flag hxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=hxB
+ local flag=u
+ [[ hxB =~ u ]]
+ [[ 0 -lt 120 ]]
+ eval 'test "$(docker inspect --format '\''{{ .NetworkSettings.Networks.cilium.GlobalIPv6Address }}'\'' client)" != ""'
+++ docker inspect --format '{{ .NetworkSettings.Networks.cilium.GlobalIPv6Address }}' client
++ test f00d::a0f:0:0:3421 '!=' ''
+ log 'test "$(docker inspect --format '\''{{ .NetworkSettings.Networks.cilium.GlobalIPv6Address }}'\'' client)" != "" succeeded'
+ local save=hxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='test "$(docker inspect --format '\''{{ .NetworkSettings.Networks.cilium.GlobalIPv6Address }}'\'' client)" != "" succeeded'
+ local stack
+ (( i=5-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_init'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main/proxy_init == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_init/wait_for_docker_ipv6_addr'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main/proxy_init/wait_for_docker_ipv6_addr == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_init/wait_for_docker_ipv6_addr/wait_specified_time_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_init/wait_for_docker_ipv6_addr/wait_specified_time_test: test "$(docker inspect --format '\''{{ .NetworkSettings.Networks.cilium.GlobalIPv6Address }}'\'' client)" != "" succeeded'
+ restore_flag hxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=hxB
+ local flag=u
+ [[ hxB =~ u ]]
+ break
+ [[ 0 -ge 120 ]]
+ log 'test "$(docker inspect --format '\''{{ .NetworkSettings.Networks.cilium.GlobalIPv6Address }}'\'' client)" != "" succeeded'
+ local save=hxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='test "$(docker inspect --format '\''{{ .NetworkSettings.Networks.cilium.GlobalIPv6Address }}'\'' client)" != "" succeeded'
+ local stack
+ (( i=5-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_init'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main/proxy_init == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_init/wait_for_docker_ipv6_addr'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main/proxy_init/wait_for_docker_ipv6_addr == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_init/wait_for_docker_ipv6_addr/wait_specified_time_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_init/wait_for_docker_ipv6_addr/wait_specified_time_test: test "$(docker inspect --format '\''{{ .NetworkSettings.Networks.cilium.GlobalIPv6Address }}'\'' client)" != "" succeeded'
+ restore_flag hxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=hxB
+ local flag=u
+ [[ hxB =~ u ]]
+ restore_flag ehxB e
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=e
+ [[ ehxB =~ e ]]
+ set -e
+ log 'waiting for endpoints to get identities'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='waiting for endpoints to get identities'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_init'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_init: waiting for endpoints to get identities'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ wc -l
++ uniq
++ sort
++ cut -d ' ' -f1
++ grep '^[1-9][0-9]* .*id.\(server\|client\)'
++ cilium endpoint list -o 'jsonpath={range [*]}{.status.identity.id}{" "}{.status.identity.labels}{"\n"}'
+ '[' 2 -ne 2 ']'
+ monitor_start
+ local save=ehxB
+ set +e
+ log 'starting monitor and dumping contents to /tmp/tmp.w2qWUcHP7n'
+ local save=hxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='starting monitor and dumping contents to /tmp/tmp.w2qWUcHP7n'
+ local stack
+ (( i=4-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_init'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main/proxy_init == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_init/monitor_start'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_init/monitor_start: starting monitor and dumping contents to /tmp/tmp.w2qWUcHP7n'
+ restore_flag hxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=hxB
+ local flag=u
+ [[ hxB =~ u ]]
+ MONITOR_PID=37515
+ restore_flag ehxB e
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=e
+ [[ ehxB =~ e ]]
+ set -e
+ log 'finished proxy_init'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='finished proxy_init'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ cilium monitor -v
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_init'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_init: finished proxy_init'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ log +----------------------------------------------------------------------+
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message=+----------------------------------------------------------------------+
+ local stack
+ (( i=2-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main: +----------------------------------------------------------------------+'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ log 'Testing without Policy'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='Testing without Policy'
+ local stack
+ (( i=2-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main: Testing without Policy'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ log +----------------------------------------------------------------------+
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message=+----------------------------------------------------------------------+
+ local stack
+ (( i=2-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main: +----------------------------------------------------------------------+'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ log 'trying to reach server IPv4 at http://10.15.182.66:80//public from client (expected: 200)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv4 at http://10.15.182.66:80//public from client (expected: 200)'
+ local stack
+ (( i=2-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main: trying to reach server IPv4 at http://10.15.182.66:80//public from client (expected: 200)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET http://10.15.182.66:80//public
+ RETURN=200
+ [[ 200 != \2\0\0 ]]
+ policy_base
+ cilium policy delete --all
+ cat
+ policy_import_and_wait -
+ log 'importing policy - and waiting up to 120 seconds to complete'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='importing policy - and waiting up to 120 seconds to complete'
+ local stack
+ (( i=4-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/policy_base'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main/policy_base == '' ]]
+ stack='envoy-smoke-test.sh: main/policy_base/policy_import_and_wait'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/policy_base/policy_import_and_wait: importing policy - and waiting up to 120 seconds to complete'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ cilium policy import -
++ awk '{print $2}'
++ grep Revision:
+ rev=2
+ timeout 120s cilium policy wait 2
+ for state in "false" "true"
+ cilium config ConntrackLocal=false
+ for service in "none" "lb"
+ case $service in
+ no_service_init
+ cilium service delete --all
+ SERVER_IP=f00d::a0f:0:0:e884
+ SERVER_IP4=10.15.182.66
+ for policy in "egress" "ingress" "egress_and_ingress" "many_egress" "many_ingress"
+ log +----------------------------------------------------------------------+
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message=+----------------------------------------------------------------------+
+ local stack
+ (( i=2-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main: +----------------------------------------------------------------------+'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ log 'Testing with Policy=egress, Service=none, Conntrack=false'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='Testing with Policy=egress, Service=none, Conntrack=false'
+ local stack
+ (( i=2-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main: Testing with Policy=egress, Service=none, Conntrack=false'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ log +----------------------------------------------------------------------+
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message=+----------------------------------------------------------------------+
+ local stack
+ (( i=2-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main: +----------------------------------------------------------------------+'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ case $policy in
+ policy_single_egress
+ cilium policy delete policy=test
+ cat
+ policy_import_and_wait -
+ log 'importing policy - and waiting up to 120 seconds to complete'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='importing policy - and waiting up to 120 seconds to complete'
+ local stack
+ (( i=4-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/policy_single_egress'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main/policy_single_egress == '' ]]
+ stack='envoy-smoke-test.sh: main/policy_single_egress/policy_import_and_wait'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/policy_single_egress/policy_import_and_wait: importing policy - and waiting up to 120 seconds to complete'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ cilium policy import -
++ grep Revision:
++ awk '{print $2}'
+ rev=4
+ timeout 120s cilium policy wait 4
+ proxy_test
+ log 'beginning proxy test'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='beginning proxy test'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: beginning proxy test'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ monitor_clear
+ local save=ehxB
+ set +e
+ log 'clearing monitor'
+ local save=hxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='clearing monitor'
+ local stack
+ (( i=4-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main/proxy_test == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test/monitor_clear'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test/monitor_clear: clearing monitor'
+ restore_flag hxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=hxB
+ local flag=u
+ [[ hxB =~ u ]]
+ cp /dev/null /tmp/tmp.w2qWUcHP7n
+ nstat
+ restore_flag ehxB e
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=e
+ [[ ehxB =~ e ]]
+ set -e
+ log 'trying to reach server IPv4 at http://10.15.182.66:80//public from client (expected: 200)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv4 at http://10.15.182.66:80//public from client (expected: 200)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv4 at http://10.15.182.66:80//public from client (expected: 200)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET http://10.15.182.66:80//public
+ RETURN=200
+ [[ 200 != \2\0\0 ]]
+ log 'trying to reach server IPv6 at http://[f00d::a0f:0:0:e884]:80/public from client (expected: 200)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv6 at http://[f00d::a0f:0:0:e884]:80/public from client (expected: 200)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv6 at http://[f00d::a0f:0:0:e884]:80/public from client (expected: 200)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET 'http://[f00d::a0f:0:0:e884]:80/public'
+ RETURN=200
+ [[ 200 != \2\0\0 ]]
+ log 'trying to reach server IPv4 at http://10.15.182.66:80/private from client (expected: 403)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv4 at http://10.15.182.66:80/private from client (expected: 403)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv4 at http://10.15.182.66:80/private from client (expected: 403)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET http://10.15.182.66:80/private
+ RETURN=403
+ [[ 403 != \4\0\3 ]]
+ log 'trying to reach server IPv6 at http://[f00d::a0f:0:0:e884]:80/private from client (expected: 403)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv6 at http://[f00d::a0f:0:0:e884]:80/private from client (expected: 403)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv6 at http://[f00d::a0f:0:0:e884]:80/private from client (expected: 403)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET 'http://[f00d::a0f:0:0:e884]:80/private'
+ RETURN=403
+ [[ 403 != \4\0\3 ]]
+ log 'finished proxy test'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='finished proxy test'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: finished proxy test'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ for policy in "egress" "ingress" "egress_and_ingress" "many_egress" "many_ingress"
+ log +----------------------------------------------------------------------+
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message=+----------------------------------------------------------------------+
+ local stack
+ (( i=2-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main: +----------------------------------------------------------------------+'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ log 'Testing with Policy=ingress, Service=none, Conntrack=false'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='Testing with Policy=ingress, Service=none, Conntrack=false'
+ local stack
+ (( i=2-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main: Testing with Policy=ingress, Service=none, Conntrack=false'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ log +----------------------------------------------------------------------+
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message=+----------------------------------------------------------------------+
+ local stack
+ (( i=2-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main: +----------------------------------------------------------------------+'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ case $policy in
+ policy_single_ingress
+ cilium policy delete policy=test
+ cat
+ policy_import_and_wait -
+ log 'importing policy - and waiting up to 120 seconds to complete'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='importing policy - and waiting up to 120 seconds to complete'
+ local stack
+ (( i=4-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/policy_single_ingress'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main/policy_single_ingress == '' ]]
+ stack='envoy-smoke-test.sh: main/policy_single_ingress/policy_import_and_wait'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/policy_single_ingress/policy_import_and_wait: importing policy - and waiting up to 120 seconds to complete'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ cilium policy import -
++ grep Revision:
++ awk '{print $2}'
+ rev=6
+ timeout 120s cilium policy wait 6
+ proxy_test
+ log 'beginning proxy test'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='beginning proxy test'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: beginning proxy test'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ monitor_clear
+ local save=ehxB
+ set +e
+ log 'clearing monitor'
+ local save=hxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='clearing monitor'
+ local stack
+ (( i=4-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main/proxy_test == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test/monitor_clear'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test/monitor_clear: clearing monitor'
+ restore_flag hxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=hxB
+ local flag=u
+ [[ hxB =~ u ]]
+ cp /dev/null /tmp/tmp.w2qWUcHP7n
+ nstat
+ restore_flag ehxB e
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=e
+ [[ ehxB =~ e ]]
+ set -e
+ log 'trying to reach server IPv4 at http://10.15.182.66:80//public from client (expected: 200)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv4 at http://10.15.182.66:80//public from client (expected: 200)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv4 at http://10.15.182.66:80//public from client (expected: 200)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET http://10.15.182.66:80//public
+ RETURN=200
+ [[ 200 != \2\0\0 ]]
+ log 'trying to reach server IPv6 at http://[f00d::a0f:0:0:e884]:80/public from client (expected: 200)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv6 at http://[f00d::a0f:0:0:e884]:80/public from client (expected: 200)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv6 at http://[f00d::a0f:0:0:e884]:80/public from client (expected: 200)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET 'http://[f00d::a0f:0:0:e884]:80/public'
+ RETURN=200
+ [[ 200 != \2\0\0 ]]
+ log 'trying to reach server IPv4 at http://10.15.182.66:80/private from client (expected: 403)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv4 at http://10.15.182.66:80/private from client (expected: 403)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv4 at http://10.15.182.66:80/private from client (expected: 403)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET http://10.15.182.66:80/private
+ RETURN=403
+ [[ 403 != \4\0\3 ]]
+ log 'trying to reach server IPv6 at http://[f00d::a0f:0:0:e884]:80/private from client (expected: 403)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv6 at http://[f00d::a0f:0:0:e884]:80/private from client (expected: 403)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv6 at http://[f00d::a0f:0:0:e884]:80/private from client (expected: 403)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET 'http://[f00d::a0f:0:0:e884]:80/private'
+ RETURN=403
+ [[ 403 != \4\0\3 ]]
+ log 'finished proxy test'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='finished proxy test'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: finished proxy test'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ for policy in "egress" "ingress" "egress_and_ingress" "many_egress" "many_ingress"
+ log +----------------------------------------------------------------------+
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message=+----------------------------------------------------------------------+
+ local stack
+ (( i=2-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main: +----------------------------------------------------------------------+'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ log 'Testing with Policy=egress_and_ingress, Service=none, Conntrack=false'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='Testing with Policy=egress_and_ingress, Service=none, Conntrack=false'
+ local stack
+ (( i=2-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main: Testing with Policy=egress_and_ingress, Service=none, Conntrack=false'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ log +----------------------------------------------------------------------+
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message=+----------------------------------------------------------------------+
+ local stack
+ (( i=2-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main: +----------------------------------------------------------------------+'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ case $policy in
+ policy_egress_and_ingress
+ cilium policy delete policy=test
+ cat
+ policy_import_and_wait -
+ log 'importing policy - and waiting up to 120 seconds to complete'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='importing policy - and waiting up to 120 seconds to complete'
+ local stack
+ (( i=4-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/policy_egress_and_ingress'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main/policy_egress_and_ingress == '' ]]
+ stack='envoy-smoke-test.sh: main/policy_egress_and_ingress/policy_import_and_wait'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/policy_egress_and_ingress/policy_import_and_wait: importing policy - and waiting up to 120 seconds to complete'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ cilium policy import -
++ grep Revision:
++ awk '{print $2}'
+ rev=8
+ timeout 120s cilium policy wait 8
+ proxy_test
+ log 'beginning proxy test'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='beginning proxy test'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: beginning proxy test'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ monitor_clear
+ local save=ehxB
+ set +e
+ log 'clearing monitor'
+ local save=hxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='clearing monitor'
+ local stack
+ (( i=4-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main/proxy_test == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test/monitor_clear'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test/monitor_clear: clearing monitor'
+ restore_flag hxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=hxB
+ local flag=u
+ [[ hxB =~ u ]]
+ cp /dev/null /tmp/tmp.w2qWUcHP7n
+ nstat
+ restore_flag ehxB e
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=e
+ [[ ehxB =~ e ]]
+ set -e
+ log 'trying to reach server IPv4 at http://10.15.182.66:80//public from client (expected: 200)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv4 at http://10.15.182.66:80//public from client (expected: 200)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv4 at http://10.15.182.66:80//public from client (expected: 200)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET http://10.15.182.66:80//public
+ RETURN=200
+ [[ 200 != \2\0\0 ]]
+ log 'trying to reach server IPv6 at http://[f00d::a0f:0:0:e884]:80/public from client (expected: 200)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv6 at http://[f00d::a0f:0:0:e884]:80/public from client (expected: 200)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv6 at http://[f00d::a0f:0:0:e884]:80/public from client (expected: 200)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET 'http://[f00d::a0f:0:0:e884]:80/public'
+ RETURN=200
+ [[ 200 != \2\0\0 ]]
+ log 'trying to reach server IPv4 at http://10.15.182.66:80/private from client (expected: 403)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv4 at http://10.15.182.66:80/private from client (expected: 403)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv4 at http://10.15.182.66:80/private from client (expected: 403)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET http://10.15.182.66:80/private
+ RETURN=403
+ [[ 403 != \4\0\3 ]]
+ log 'trying to reach server IPv6 at http://[f00d::a0f:0:0:e884]:80/private from client (expected: 403)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv6 at http://[f00d::a0f:0:0:e884]:80/private from client (expected: 403)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv6 at http://[f00d::a0f:0:0:e884]:80/private from client (expected: 403)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET 'http://[f00d::a0f:0:0:e884]:80/private'
+ RETURN=403
+ [[ 403 != \4\0\3 ]]
+ log 'finished proxy test'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='finished proxy test'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: finished proxy test'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ for policy in "egress" "ingress" "egress_and_ingress" "many_egress" "many_ingress"
+ log +----------------------------------------------------------------------+
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message=+----------------------------------------------------------------------+
+ local stack
+ (( i=2-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main: +----------------------------------------------------------------------+'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ log 'Testing with Policy=many_egress, Service=none, Conntrack=false'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='Testing with Policy=many_egress, Service=none, Conntrack=false'
+ local stack
+ (( i=2-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main: Testing with Policy=many_egress, Service=none, Conntrack=false'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ log +----------------------------------------------------------------------+
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message=+----------------------------------------------------------------------+
+ local stack
+ (( i=2-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main: +----------------------------------------------------------------------+'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ case $policy in
+ policy_many_egress
+ cilium policy delete policy=test
+ cat
+ policy_import_and_wait -
+ log 'importing policy - and waiting up to 120 seconds to complete'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='importing policy - and waiting up to 120 seconds to complete'
+ local stack
+ (( i=4-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/policy_many_egress'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main/policy_many_egress == '' ]]
+ stack='envoy-smoke-test.sh: main/policy_many_egress/policy_import_and_wait'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/policy_many_egress/policy_import_and_wait: importing policy - and waiting up to 120 seconds to complete'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ cilium policy import -
++ grep Revision:
++ awk '{print $2}'
+ rev=10
+ timeout 120s cilium policy wait 10
+ proxy_test
+ log 'beginning proxy test'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='beginning proxy test'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: beginning proxy test'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ monitor_clear
+ local save=ehxB
+ set +e
+ log 'clearing monitor'
+ local save=hxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='clearing monitor'
+ local stack
+ (( i=4-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main/proxy_test == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test/monitor_clear'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test/monitor_clear: clearing monitor'
+ restore_flag hxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=hxB
+ local flag=u
+ [[ hxB =~ u ]]
+ cp /dev/null /tmp/tmp.w2qWUcHP7n
+ nstat
+ restore_flag ehxB e
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=e
+ [[ ehxB =~ e ]]
+ set -e
+ log 'trying to reach server IPv4 at http://10.15.182.66:80//public from client (expected: 200)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv4 at http://10.15.182.66:80//public from client (expected: 200)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv4 at http://10.15.182.66:80//public from client (expected: 200)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET http://10.15.182.66:80//public
+ RETURN=200
+ [[ 200 != \2\0\0 ]]
+ log 'trying to reach server IPv6 at http://[f00d::a0f:0:0:e884]:80/public from client (expected: 200)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv6 at http://[f00d::a0f:0:0:e884]:80/public from client (expected: 200)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv6 at http://[f00d::a0f:0:0:e884]:80/public from client (expected: 200)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET 'http://[f00d::a0f:0:0:e884]:80/public'
+ RETURN=200
+ [[ 200 != \2\0\0 ]]
+ log 'trying to reach server IPv4 at http://10.15.182.66:80/private from client (expected: 403)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv4 at http://10.15.182.66:80/private from client (expected: 403)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv4 at http://10.15.182.66:80/private from client (expected: 403)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET http://10.15.182.66:80/private
+ RETURN=403
+ [[ 403 != \4\0\3 ]]
+ log 'trying to reach server IPv6 at http://[f00d::a0f:0:0:e884]:80/private from client (expected: 403)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv6 at http://[f00d::a0f:0:0:e884]:80/private from client (expected: 403)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv6 at http://[f00d::a0f:0:0:e884]:80/private from client (expected: 403)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET 'http://[f00d::a0f:0:0:e884]:80/private'
+ RETURN=403
+ [[ 403 != \4\0\3 ]]
+ log 'finished proxy test'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='finished proxy test'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: finished proxy test'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ for policy in "egress" "ingress" "egress_and_ingress" "many_egress" "many_ingress"
+ log +----------------------------------------------------------------------+
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message=+----------------------------------------------------------------------+
+ local stack
+ (( i=2-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main: +----------------------------------------------------------------------+'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ log 'Testing with Policy=many_ingress, Service=none, Conntrack=false'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='Testing with Policy=many_ingress, Service=none, Conntrack=false'
+ local stack
+ (( i=2-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main: Testing with Policy=many_ingress, Service=none, Conntrack=false'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ log +----------------------------------------------------------------------+
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message=+----------------------------------------------------------------------+
+ local stack
+ (( i=2-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main: +----------------------------------------------------------------------+'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ case $policy in
+ policy_many_ingress
+ cilium policy delete policy=test
+ cat
+ policy_import_and_wait -
+ log 'importing policy - and waiting up to 120 seconds to complete'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='importing policy - and waiting up to 120 seconds to complete'
+ local stack
+ (( i=4-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/policy_many_ingress'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main/policy_many_ingress == '' ]]
+ stack='envoy-smoke-test.sh: main/policy_many_ingress/policy_import_and_wait'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/policy_many_ingress/policy_import_and_wait: importing policy - and waiting up to 120 seconds to complete'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ cilium policy import -
++ awk '{print $2}'
++ grep Revision:
+ rev=12
+ timeout 120s cilium policy wait 12
+ proxy_test
+ log 'beginning proxy test'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='beginning proxy test'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: beginning proxy test'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ monitor_clear
+ local save=ehxB
+ set +e
+ log 'clearing monitor'
+ local save=hxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='clearing monitor'
+ local stack
+ (( i=4-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main/proxy_test == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test/monitor_clear'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test/monitor_clear: clearing monitor'
+ restore_flag hxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=hxB
+ local flag=u
+ [[ hxB =~ u ]]
+ cp /dev/null /tmp/tmp.w2qWUcHP7n
+ nstat
+ restore_flag ehxB e
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=e
+ [[ ehxB =~ e ]]
+ set -e
+ log 'trying to reach server IPv4 at http://10.15.182.66:80//public from client (expected: 200)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv4 at http://10.15.182.66:80//public from client (expected: 200)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv4 at http://10.15.182.66:80//public from client (expected: 200)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET http://10.15.182.66:80//public
+ RETURN=200
+ [[ 200 != \2\0\0 ]]
+ log 'trying to reach server IPv6 at http://[f00d::a0f:0:0:e884]:80/public from client (expected: 200)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv6 at http://[f00d::a0f:0:0:e884]:80/public from client (expected: 200)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv6 at http://[f00d::a0f:0:0:e884]:80/public from client (expected: 200)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET 'http://[f00d::a0f:0:0:e884]:80/public'
+ RETURN=200
+ [[ 200 != \2\0\0 ]]
+ log 'trying to reach server IPv4 at http://10.15.182.66:80/private from client (expected: 403)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv4 at http://10.15.182.66:80/private from client (expected: 403)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv4 at http://10.15.182.66:80/private from client (expected: 403)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET http://10.15.182.66:80/private
+ RETURN=403
+ [[ 403 != \4\0\3 ]]
+ log 'trying to reach server IPv6 at http://[f00d::a0f:0:0:e884]:80/private from client (expected: 403)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv6 at http://[f00d::a0f:0:0:e884]:80/private from client (expected: 403)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv6 at http://[f00d::a0f:0:0:e884]:80/private from client (expected: 403)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET 'http://[f00d::a0f:0:0:e884]:80/private'
+ RETURN=403
+ [[ 403 != \4\0\3 ]]
+ log 'finished proxy test'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='finished proxy test'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: finished proxy test'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ for service in "none" "lb"
+ case $service in
+ service_init
+ log 'beginning service init'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='beginning service init'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/service_init'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/service_init: beginning service init'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ cilium service update --frontend 10.0.0.2:80 --id 2233 --backends 10.15.182.66:80 --backends 10.15.57.88:80
+ cilium service update --frontend '[f00d::1:1]:80' --id 2234 --backends '[f00d::a0f:0:0:e884]:80' --backends '[f00d::a0f:0:0:450b]:80'
+ SERVER_IP=f00d::1:1
+ SERVER_IP4=10.0.0.2
+ log 'finished service init'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='finished service init'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/service_init'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/service_init: finished service init'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ for policy in "egress" "ingress" "egress_and_ingress" "many_egress" "many_ingress"
+ log +----------------------------------------------------------------------+
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message=+----------------------------------------------------------------------+
+ local stack
+ (( i=2-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main: +----------------------------------------------------------------------+'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ log 'Testing with Policy=egress, Service=lb, Conntrack=false'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='Testing with Policy=egress, Service=lb, Conntrack=false'
+ local stack
+ (( i=2-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main: Testing with Policy=egress, Service=lb, Conntrack=false'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ log +----------------------------------------------------------------------+
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message=+----------------------------------------------------------------------+
+ local stack
+ (( i=2-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main: +----------------------------------------------------------------------+'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ case $policy in
+ policy_single_egress
+ cilium policy delete policy=test
+ cat
+ policy_import_and_wait -
+ log 'importing policy - and waiting up to 120 seconds to complete'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='importing policy - and waiting up to 120 seconds to complete'
+ local stack
+ (( i=4-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/policy_single_egress'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main/policy_single_egress == '' ]]
+ stack='envoy-smoke-test.sh: main/policy_single_egress/policy_import_and_wait'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/policy_single_egress/policy_import_and_wait: importing policy - and waiting up to 120 seconds to complete'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ cilium policy import -
++ awk '{print $2}'
++ grep Revision:
+ rev=14
+ timeout 120s cilium policy wait 14
+ proxy_test
+ log 'beginning proxy test'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='beginning proxy test'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: beginning proxy test'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ monitor_clear
+ local save=ehxB
+ set +e
+ log 'clearing monitor'
+ local save=hxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='clearing monitor'
+ local stack
+ (( i=4-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main/proxy_test == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test/monitor_clear'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test/monitor_clear: clearing monitor'
+ restore_flag hxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=hxB
+ local flag=u
+ [[ hxB =~ u ]]
+ cp /dev/null /tmp/tmp.w2qWUcHP7n
+ nstat
+ restore_flag ehxB e
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=e
+ [[ ehxB =~ e ]]
+ set -e
+ log 'trying to reach server IPv4 at http://10.0.0.2:80//public from client (expected: 200)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv4 at http://10.0.0.2:80//public from client (expected: 200)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv4 at http://10.0.0.2:80//public from client (expected: 200)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET http://10.0.0.2:80//public
+ RETURN=200
+ [[ 200 != \2\0\0 ]]
+ log 'trying to reach server IPv6 at http://[f00d::1:1]:80/public from client (expected: 200)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv6 at http://[f00d::1:1]:80/public from client (expected: 200)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv6 at http://[f00d::1:1]:80/public from client (expected: 200)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET 'http://[f00d::1:1]:80/public'
+ RETURN=200
+ [[ 200 != \2\0\0 ]]
+ log 'trying to reach server IPv4 at http://10.0.0.2:80/private from client (expected: 403)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv4 at http://10.0.0.2:80/private from client (expected: 403)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv4 at http://10.0.0.2:80/private from client (expected: 403)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET http://10.0.0.2:80/private
+ RETURN=403
+ [[ 403 != \4\0\3 ]]
+ log 'trying to reach server IPv6 at http://[f00d::1:1]:80/private from client (expected: 403)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv6 at http://[f00d::1:1]:80/private from client (expected: 403)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv6 at http://[f00d::1:1]:80/private from client (expected: 403)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET 'http://[f00d::1:1]:80/private'
+ RETURN=403
+ [[ 403 != \4\0\3 ]]
+ log 'finished proxy test'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='finished proxy test'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: finished proxy test'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ for policy in "egress" "ingress" "egress_and_ingress" "many_egress" "many_ingress"
+ log +----------------------------------------------------------------------+
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message=+----------------------------------------------------------------------+
+ local stack
+ (( i=2-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main: +----------------------------------------------------------------------+'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ log 'Testing with Policy=ingress, Service=lb, Conntrack=false'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='Testing with Policy=ingress, Service=lb, Conntrack=false'
+ local stack
+ (( i=2-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main: Testing with Policy=ingress, Service=lb, Conntrack=false'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ log +----------------------------------------------------------------------+
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message=+----------------------------------------------------------------------+
+ local stack
+ (( i=2-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main: +----------------------------------------------------------------------+'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ case $policy in
+ policy_single_ingress
+ cilium policy delete policy=test
+ cat
+ policy_import_and_wait -
+ log 'importing policy - and waiting up to 120 seconds to complete'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='importing policy - and waiting up to 120 seconds to complete'
+ local stack
+ (( i=4-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/policy_single_ingress'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main/policy_single_ingress == '' ]]
+ stack='envoy-smoke-test.sh: main/policy_single_ingress/policy_import_and_wait'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/policy_single_ingress/policy_import_and_wait: importing policy - and waiting up to 120 seconds to complete'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ cilium policy import -
++ grep Revision:
++ awk '{print $2}'
+ rev=16
+ timeout 120s cilium policy wait 16
+ proxy_test
+ log 'beginning proxy test'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='beginning proxy test'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: beginning proxy test'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ monitor_clear
+ local save=ehxB
+ set +e
+ log 'clearing monitor'
+ local save=hxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='clearing monitor'
+ local stack
+ (( i=4-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main/proxy_test == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test/monitor_clear'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test/monitor_clear: clearing monitor'
+ restore_flag hxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=hxB
+ local flag=u
+ [[ hxB =~ u ]]
+ cp /dev/null /tmp/tmp.w2qWUcHP7n
+ nstat
+ restore_flag ehxB e
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=e
+ [[ ehxB =~ e ]]
+ set -e
+ log 'trying to reach server IPv4 at http://10.0.0.2:80//public from client (expected: 200)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv4 at http://10.0.0.2:80//public from client (expected: 200)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv4 at http://10.0.0.2:80//public from client (expected: 200)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET http://10.0.0.2:80//public
+ RETURN=200
+ [[ 200 != \2\0\0 ]]
+ log 'trying to reach server IPv6 at http://[f00d::1:1]:80/public from client (expected: 200)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv6 at http://[f00d::1:1]:80/public from client (expected: 200)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv6 at http://[f00d::1:1]:80/public from client (expected: 200)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET 'http://[f00d::1:1]:80/public'
+ RETURN=200
+ [[ 200 != \2\0\0 ]]
+ log 'trying to reach server IPv4 at http://10.0.0.2:80/private from client (expected: 403)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv4 at http://10.0.0.2:80/private from client (expected: 403)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv4 at http://10.0.0.2:80/private from client (expected: 403)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET http://10.0.0.2:80/private
+ RETURN=403
+ [[ 403 != \4\0\3 ]]
+ log 'trying to reach server IPv6 at http://[f00d::1:1]:80/private from client (expected: 403)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv6 at http://[f00d::1:1]:80/private from client (expected: 403)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv6 at http://[f00d::1:1]:80/private from client (expected: 403)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET 'http://[f00d::1:1]:80/private'
+ RETURN=403
+ [[ 403 != \4\0\3 ]]
+ log 'finished proxy test'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='finished proxy test'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: finished proxy test'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ for policy in "egress" "ingress" "egress_and_ingress" "many_egress" "many_ingress"
+ log +----------------------------------------------------------------------+
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message=+----------------------------------------------------------------------+
+ local stack
+ (( i=2-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main: +----------------------------------------------------------------------+'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ log 'Testing with Policy=egress_and_ingress, Service=lb, Conntrack=false'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='Testing with Policy=egress_and_ingress, Service=lb, Conntrack=false'
+ local stack
+ (( i=2-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main: Testing with Policy=egress_and_ingress, Service=lb, Conntrack=false'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ log +----------------------------------------------------------------------+
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message=+----------------------------------------------------------------------+
+ local stack
+ (( i=2-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main: +----------------------------------------------------------------------+'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ case $policy in
+ policy_egress_and_ingress
+ cilium policy delete policy=test
+ cat
+ policy_import_and_wait -
+ log 'importing policy - and waiting up to 120 seconds to complete'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='importing policy - and waiting up to 120 seconds to complete'
+ local stack
+ (( i=4-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/policy_egress_and_ingress'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main/policy_egress_and_ingress == '' ]]
+ stack='envoy-smoke-test.sh: main/policy_egress_and_ingress/policy_import_and_wait'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/policy_egress_and_ingress/policy_import_and_wait: importing policy - and waiting up to 120 seconds to complete'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ cilium policy import -
++ grep Revision:
++ awk '{print $2}'
+ rev=18
+ timeout 120s cilium policy wait 18
+ proxy_test
+ log 'beginning proxy test'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='beginning proxy test'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: beginning proxy test'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ monitor_clear
+ local save=ehxB
+ set +e
+ log 'clearing monitor'
+ local save=hxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='clearing monitor'
+ local stack
+ (( i=4-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main/proxy_test == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test/monitor_clear'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test/monitor_clear: clearing monitor'
+ restore_flag hxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=hxB
+ local flag=u
+ [[ hxB =~ u ]]
+ cp /dev/null /tmp/tmp.w2qWUcHP7n
+ nstat
+ restore_flag ehxB e
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=e
+ [[ ehxB =~ e ]]
+ set -e
+ log 'trying to reach server IPv4 at http://10.0.0.2:80//public from client (expected: 200)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv4 at http://10.0.0.2:80//public from client (expected: 200)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv4 at http://10.0.0.2:80//public from client (expected: 200)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET http://10.0.0.2:80//public
+ RETURN=200
+ [[ 200 != \2\0\0 ]]
+ log 'trying to reach server IPv6 at http://[f00d::1:1]:80/public from client (expected: 200)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv6 at http://[f00d::1:1]:80/public from client (expected: 200)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv6 at http://[f00d::1:1]:80/public from client (expected: 200)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET 'http://[f00d::1:1]:80/public'
+ RETURN=200
+ [[ 200 != \2\0\0 ]]
+ log 'trying to reach server IPv4 at http://10.0.0.2:80/private from client (expected: 403)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv4 at http://10.0.0.2:80/private from client (expected: 403)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv4 at http://10.0.0.2:80/private from client (expected: 403)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET http://10.0.0.2:80/private
+ RETURN=403
+ [[ 403 != \4\0\3 ]]
+ log 'trying to reach server IPv6 at http://[f00d::1:1]:80/private from client (expected: 403)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv6 at http://[f00d::1:1]:80/private from client (expected: 403)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv6 at http://[f00d::1:1]:80/private from client (expected: 403)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET 'http://[f00d::1:1]:80/private'
+ RETURN=403
+ [[ 403 != \4\0\3 ]]
+ log 'finished proxy test'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='finished proxy test'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: finished proxy test'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ for policy in "egress" "ingress" "egress_and_ingress" "many_egress" "many_ingress"
+ log +----------------------------------------------------------------------+
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message=+----------------------------------------------------------------------+
+ local stack
+ (( i=2-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main: +----------------------------------------------------------------------+'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ log 'Testing with Policy=many_egress, Service=lb, Conntrack=false'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='Testing with Policy=many_egress, Service=lb, Conntrack=false'
+ local stack
+ (( i=2-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main: Testing with Policy=many_egress, Service=lb, Conntrack=false'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ log +----------------------------------------------------------------------+
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message=+----------------------------------------------------------------------+
+ local stack
+ (( i=2-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main: +----------------------------------------------------------------------+'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ case $policy in
+ policy_many_egress
+ cilium policy delete policy=test
+ cat
+ policy_import_and_wait -
+ log 'importing policy - and waiting up to 120 seconds to complete'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='importing policy - and waiting up to 120 seconds to complete'
+ local stack
+ (( i=4-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/policy_many_egress'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main/policy_many_egress == '' ]]
+ stack='envoy-smoke-test.sh: main/policy_many_egress/policy_import_and_wait'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/policy_many_egress/policy_import_and_wait: importing policy - and waiting up to 120 seconds to complete'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ cilium policy import -
++ awk '{print $2}'
++ grep Revision:
+ rev=20
+ timeout 120s cilium policy wait 20
+ proxy_test
+ log 'beginning proxy test'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='beginning proxy test'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: beginning proxy test'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ monitor_clear
+ local save=ehxB
+ set +e
+ log 'clearing monitor'
+ local save=hxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='clearing monitor'
+ local stack
+ (( i=4-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main/proxy_test == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test/monitor_clear'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test/monitor_clear: clearing monitor'
+ restore_flag hxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=hxB
+ local flag=u
+ [[ hxB =~ u ]]
+ cp /dev/null /tmp/tmp.w2qWUcHP7n
+ nstat
+ restore_flag ehxB e
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=e
+ [[ ehxB =~ e ]]
+ set -e
+ log 'trying to reach server IPv4 at http://10.0.0.2:80//public from client (expected: 200)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv4 at http://10.0.0.2:80//public from client (expected: 200)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv4 at http://10.0.0.2:80//public from client (expected: 200)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET http://10.0.0.2:80//public
+ RETURN=200
+ [[ 200 != \2\0\0 ]]
+ log 'trying to reach server IPv6 at http://[f00d::1:1]:80/public from client (expected: 200)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv6 at http://[f00d::1:1]:80/public from client (expected: 200)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv6 at http://[f00d::1:1]:80/public from client (expected: 200)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET 'http://[f00d::1:1]:80/public'
+ RETURN=200
+ [[ 200 != \2\0\0 ]]
+ log 'trying to reach server IPv4 at http://10.0.0.2:80/private from client (expected: 403)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv4 at http://10.0.0.2:80/private from client (expected: 403)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv4 at http://10.0.0.2:80/private from client (expected: 403)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET http://10.0.0.2:80/private
+ RETURN=403
+ [[ 403 != \4\0\3 ]]
+ log 'trying to reach server IPv6 at http://[f00d::1:1]:80/private from client (expected: 403)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv6 at http://[f00d::1:1]:80/private from client (expected: 403)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv6 at http://[f00d::1:1]:80/private from client (expected: 403)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET 'http://[f00d::1:1]:80/private'
+ RETURN=403
+ [[ 403 != \4\0\3 ]]
+ log 'finished proxy test'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='finished proxy test'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: finished proxy test'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ for policy in "egress" "ingress" "egress_and_ingress" "many_egress" "many_ingress"
+ log +----------------------------------------------------------------------+
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message=+----------------------------------------------------------------------+
+ local stack
+ (( i=2-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main: +----------------------------------------------------------------------+'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ log 'Testing with Policy=many_ingress, Service=lb, Conntrack=false'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='Testing with Policy=many_ingress, Service=lb, Conntrack=false'
+ local stack
+ (( i=2-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main: Testing with Policy=many_ingress, Service=lb, Conntrack=false'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ log +----------------------------------------------------------------------+
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message=+----------------------------------------------------------------------+
+ local stack
+ (( i=2-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main: +----------------------------------------------------------------------+'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ case $policy in
+ policy_many_ingress
+ cilium policy delete policy=test
+ cat
+ policy_import_and_wait -
+ log 'importing policy - and waiting up to 120 seconds to complete'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='importing policy - and waiting up to 120 seconds to complete'
+ local stack
+ (( i=4-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/policy_many_ingress'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main/policy_many_ingress == '' ]]
+ stack='envoy-smoke-test.sh: main/policy_many_ingress/policy_import_and_wait'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/policy_many_ingress/policy_import_and_wait: importing policy - and waiting up to 120 seconds to complete'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ cilium policy import -
++ grep Revision:
++ awk '{print $2}'
+ rev=22
+ timeout 120s cilium policy wait 22
+ proxy_test
+ log 'beginning proxy test'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='beginning proxy test'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: beginning proxy test'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ monitor_clear
+ local save=ehxB
+ set +e
+ log 'clearing monitor'
+ local save=hxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='clearing monitor'
+ local stack
+ (( i=4-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main/proxy_test == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test/monitor_clear'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test/monitor_clear: clearing monitor'
+ restore_flag hxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=hxB
+ local flag=u
+ [[ hxB =~ u ]]
+ cp /dev/null /tmp/tmp.w2qWUcHP7n
+ nstat
+ restore_flag ehxB e
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=e
+ [[ ehxB =~ e ]]
+ set -e
+ log 'trying to reach server IPv4 at http://10.0.0.2:80//public from client (expected: 200)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv4 at http://10.0.0.2:80//public from client (expected: 200)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv4 at http://10.0.0.2:80//public from client (expected: 200)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET http://10.0.0.2:80//public
+ RETURN=200
+ [[ 200 != \2\0\0 ]]
+ log 'trying to reach server IPv6 at http://[f00d::1:1]:80/public from client (expected: 200)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv6 at http://[f00d::1:1]:80/public from client (expected: 200)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv6 at http://[f00d::1:1]:80/public from client (expected: 200)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET 'http://[f00d::1:1]:80/public'
+ RETURN=200
+ [[ 200 != \2\0\0 ]]
+ log 'trying to reach server IPv4 at http://10.0.0.2:80/private from client (expected: 403)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv4 at http://10.0.0.2:80/private from client (expected: 403)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv4 at http://10.0.0.2:80/private from client (expected: 403)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET http://10.0.0.2:80/private
+ RETURN=403
+ [[ 403 != \4\0\3 ]]
+ log 'trying to reach server IPv6 at http://[f00d::1:1]:80/private from client (expected: 403)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv6 at http://[f00d::1:1]:80/private from client (expected: 403)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv6 at http://[f00d::1:1]:80/private from client (expected: 403)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET 'http://[f00d::1:1]:80/private'
+ RETURN=403
+ [[ 403 != \4\0\3 ]]
+ log 'finished proxy test'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='finished proxy test'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: finished proxy test'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ for state in "false" "true"
+ cilium config ConntrackLocal=true
+ for service in "none" "lb"
+ case $service in
+ no_service_init
+ cilium service delete --all
+ SERVER_IP=f00d::a0f:0:0:e884
+ SERVER_IP4=10.15.182.66
+ for policy in "egress" "ingress" "egress_and_ingress" "many_egress" "many_ingress"
+ log +----------------------------------------------------------------------+
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message=+----------------------------------------------------------------------+
+ local stack
+ (( i=2-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main: +----------------------------------------------------------------------+'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ log 'Testing with Policy=egress, Service=none, Conntrack=true'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='Testing with Policy=egress, Service=none, Conntrack=true'
+ local stack
+ (( i=2-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main: Testing with Policy=egress, Service=none, Conntrack=true'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ log +----------------------------------------------------------------------+
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message=+----------------------------------------------------------------------+
+ local stack
+ (( i=2-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main: +----------------------------------------------------------------------+'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ case $policy in
+ policy_single_egress
+ cilium policy delete policy=test
+ cat
+ policy_import_and_wait -
+ log 'importing policy - and waiting up to 120 seconds to complete'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='importing policy - and waiting up to 120 seconds to complete'
+ local stack
+ (( i=4-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/policy_single_egress'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main/policy_single_egress == '' ]]
+ stack='envoy-smoke-test.sh: main/policy_single_egress/policy_import_and_wait'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/policy_single_egress/policy_import_and_wait: importing policy - and waiting up to 120 seconds to complete'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ cilium policy import -
++ awk '{print $2}'
++ grep Revision:
+ rev=25
+ timeout 120s cilium policy wait 25
+ proxy_test
+ log 'beginning proxy test'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='beginning proxy test'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: beginning proxy test'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ monitor_clear
+ local save=ehxB
+ set +e
+ log 'clearing monitor'
+ local save=hxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='clearing monitor'
+ local stack
+ (( i=4-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main/proxy_test == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test/monitor_clear'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test/monitor_clear: clearing monitor'
+ restore_flag hxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=hxB
+ local flag=u
+ [[ hxB =~ u ]]
+ cp /dev/null /tmp/tmp.w2qWUcHP7n
+ nstat
+ restore_flag ehxB e
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=e
+ [[ ehxB =~ e ]]
+ set -e
+ log 'trying to reach server IPv4 at http://10.15.182.66:80//public from client (expected: 200)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv4 at http://10.15.182.66:80//public from client (expected: 200)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv4 at http://10.15.182.66:80//public from client (expected: 200)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET http://10.15.182.66:80//public
+ RETURN=200
+ [[ 200 != \2\0\0 ]]
+ log 'trying to reach server IPv6 at http://[f00d::a0f:0:0:e884]:80/public from client (expected: 200)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv6 at http://[f00d::a0f:0:0:e884]:80/public from client (expected: 200)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv6 at http://[f00d::a0f:0:0:e884]:80/public from client (expected: 200)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET 'http://[f00d::a0f:0:0:e884]:80/public'
+ RETURN=200
+ [[ 200 != \2\0\0 ]]
+ log 'trying to reach server IPv4 at http://10.15.182.66:80/private from client (expected: 403)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv4 at http://10.15.182.66:80/private from client (expected: 403)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv4 at http://10.15.182.66:80/private from client (expected: 403)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET http://10.15.182.66:80/private
+ RETURN=403
+ [[ 403 != \4\0\3 ]]
+ log 'trying to reach server IPv6 at http://[f00d::a0f:0:0:e884]:80/private from client (expected: 403)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv6 at http://[f00d::a0f:0:0:e884]:80/private from client (expected: 403)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv6 at http://[f00d::a0f:0:0:e884]:80/private from client (expected: 403)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET 'http://[f00d::a0f:0:0:e884]:80/private'
+ RETURN=403
+ [[ 403 != \4\0\3 ]]
+ log 'finished proxy test'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='finished proxy test'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: finished proxy test'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ for policy in "egress" "ingress" "egress_and_ingress" "many_egress" "many_ingress"
+ log +----------------------------------------------------------------------+
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message=+----------------------------------------------------------------------+
+ local stack
+ (( i=2-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main: +----------------------------------------------------------------------+'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ log 'Testing with Policy=ingress, Service=none, Conntrack=true'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='Testing with Policy=ingress, Service=none, Conntrack=true'
+ local stack
+ (( i=2-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main: Testing with Policy=ingress, Service=none, Conntrack=true'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ log +----------------------------------------------------------------------+
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message=+----------------------------------------------------------------------+
+ local stack
+ (( i=2-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main: +----------------------------------------------------------------------+'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ case $policy in
+ policy_single_ingress
+ cilium policy delete policy=test
+ cat
+ policy_import_and_wait -
+ log 'importing policy - and waiting up to 120 seconds to complete'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='importing policy - and waiting up to 120 seconds to complete'
+ local stack
+ (( i=4-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/policy_single_ingress'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main/policy_single_ingress == '' ]]
+ stack='envoy-smoke-test.sh: main/policy_single_ingress/policy_import_and_wait'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/policy_single_ingress/policy_import_and_wait: importing policy - and waiting up to 120 seconds to complete'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ cilium policy import -
++ grep Revision:
++ awk '{print $2}'
+ rev=27
+ timeout 120s cilium policy wait 27
+ proxy_test
+ log 'beginning proxy test'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='beginning proxy test'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: beginning proxy test'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ monitor_clear
+ local save=ehxB
+ set +e
+ log 'clearing monitor'
+ local save=hxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='clearing monitor'
+ local stack
+ (( i=4-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main/proxy_test == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test/monitor_clear'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test/monitor_clear: clearing monitor'
+ restore_flag hxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=hxB
+ local flag=u
+ [[ hxB =~ u ]]
+ cp /dev/null /tmp/tmp.w2qWUcHP7n
+ nstat
+ restore_flag ehxB e
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=e
+ [[ ehxB =~ e ]]
+ set -e
+ log 'trying to reach server IPv4 at http://10.15.182.66:80//public from client (expected: 200)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv4 at http://10.15.182.66:80//public from client (expected: 200)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv4 at http://10.15.182.66:80//public from client (expected: 200)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET http://10.15.182.66:80//public
+ RETURN=200
+ [[ 200 != \2\0\0 ]]
+ log 'trying to reach server IPv6 at http://[f00d::a0f:0:0:e884]:80/public from client (expected: 200)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv6 at http://[f00d::a0f:0:0:e884]:80/public from client (expected: 200)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv6 at http://[f00d::a0f:0:0:e884]:80/public from client (expected: 200)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET 'http://[f00d::a0f:0:0:e884]:80/public'
+ RETURN=200
+ [[ 200 != \2\0\0 ]]
+ log 'trying to reach server IPv4 at http://10.15.182.66:80/private from client (expected: 403)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv4 at http://10.15.182.66:80/private from client (expected: 403)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv4 at http://10.15.182.66:80/private from client (expected: 403)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET http://10.15.182.66:80/private
+ RETURN=403
+ [[ 403 != \4\0\3 ]]
+ log 'trying to reach server IPv6 at http://[f00d::a0f:0:0:e884]:80/private from client (expected: 403)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv6 at http://[f00d::a0f:0:0:e884]:80/private from client (expected: 403)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv6 at http://[f00d::a0f:0:0:e884]:80/private from client (expected: 403)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET 'http://[f00d::a0f:0:0:e884]:80/private'
+ RETURN=403
+ [[ 403 != \4\0\3 ]]
+ log 'finished proxy test'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='finished proxy test'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: finished proxy test'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ for policy in "egress" "ingress" "egress_and_ingress" "many_egress" "many_ingress"
+ log +----------------------------------------------------------------------+
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message=+----------------------------------------------------------------------+
+ local stack
+ (( i=2-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main: +----------------------------------------------------------------------+'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ log 'Testing with Policy=egress_and_ingress, Service=none, Conntrack=true'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='Testing with Policy=egress_and_ingress, Service=none, Conntrack=true'
+ local stack
+ (( i=2-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main: Testing with Policy=egress_and_ingress, Service=none, Conntrack=true'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ log +----------------------------------------------------------------------+
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message=+----------------------------------------------------------------------+
+ local stack
+ (( i=2-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main: +----------------------------------------------------------------------+'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ case $policy in
+ policy_egress_and_ingress
+ cilium policy delete policy=test
+ cat
+ policy_import_and_wait -
+ log 'importing policy - and waiting up to 120 seconds to complete'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='importing policy - and waiting up to 120 seconds to complete'
+ local stack
+ (( i=4-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/policy_egress_and_ingress'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main/policy_egress_and_ingress == '' ]]
+ stack='envoy-smoke-test.sh: main/policy_egress_and_ingress/policy_import_and_wait'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/policy_egress_and_ingress/policy_import_and_wait: importing policy - and waiting up to 120 seconds to complete'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ cilium policy import -
++ awk '{print $2}'
++ grep Revision:
+ rev=29
+ timeout 120s cilium policy wait 29
+ proxy_test
+ log 'beginning proxy test'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='beginning proxy test'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: beginning proxy test'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ monitor_clear
+ local save=ehxB
+ set +e
+ log 'clearing monitor'
+ local save=hxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='clearing monitor'
+ local stack
+ (( i=4-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main/proxy_test == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test/monitor_clear'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test/monitor_clear: clearing monitor'
+ restore_flag hxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=hxB
+ local flag=u
+ [[ hxB =~ u ]]
+ cp /dev/null /tmp/tmp.w2qWUcHP7n
+ nstat
+ restore_flag ehxB e
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=e
+ [[ ehxB =~ e ]]
+ set -e
+ log 'trying to reach server IPv4 at http://10.15.182.66:80//public from client (expected: 200)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv4 at http://10.15.182.66:80//public from client (expected: 200)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv4 at http://10.15.182.66:80//public from client (expected: 200)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET http://10.15.182.66:80//public
+ RETURN=200
+ [[ 200 != \2\0\0 ]]
+ log 'trying to reach server IPv6 at http://[f00d::a0f:0:0:e884]:80/public from client (expected: 200)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv6 at http://[f00d::a0f:0:0:e884]:80/public from client (expected: 200)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv6 at http://[f00d::a0f:0:0:e884]:80/public from client (expected: 200)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET 'http://[f00d::a0f:0:0:e884]:80/public'
+ RETURN=200
+ [[ 200 != \2\0\0 ]]
+ log 'trying to reach server IPv4 at http://10.15.182.66:80/private from client (expected: 403)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv4 at http://10.15.182.66:80/private from client (expected: 403)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv4 at http://10.15.182.66:80/private from client (expected: 403)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET http://10.15.182.66:80/private
+ RETURN=403
+ [[ 403 != \4\0\3 ]]
+ log 'trying to reach server IPv6 at http://[f00d::a0f:0:0:e884]:80/private from client (expected: 403)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv6 at http://[f00d::a0f:0:0:e884]:80/private from client (expected: 403)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv6 at http://[f00d::a0f:0:0:e884]:80/private from client (expected: 403)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET 'http://[f00d::a0f:0:0:e884]:80/private'
+ RETURN=403
+ [[ 403 != \4\0\3 ]]
+ log 'finished proxy test'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='finished proxy test'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: finished proxy test'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ for policy in "egress" "ingress" "egress_and_ingress" "many_egress" "many_ingress"
+ log +----------------------------------------------------------------------+
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message=+----------------------------------------------------------------------+
+ local stack
+ (( i=2-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main: +----------------------------------------------------------------------+'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ log 'Testing with Policy=many_egress, Service=none, Conntrack=true'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='Testing with Policy=many_egress, Service=none, Conntrack=true'
+ local stack
+ (( i=2-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main: Testing with Policy=many_egress, Service=none, Conntrack=true'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ log +----------------------------------------------------------------------+
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message=+----------------------------------------------------------------------+
+ local stack
+ (( i=2-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main: +----------------------------------------------------------------------+'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ case $policy in
+ policy_many_egress
+ cilium policy delete policy=test
+ cat
+ policy_import_and_wait -
+ log 'importing policy - and waiting up to 120 seconds to complete'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='importing policy - and waiting up to 120 seconds to complete'
+ local stack
+ (( i=4-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/policy_many_egress'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main/policy_many_egress == '' ]]
+ stack='envoy-smoke-test.sh: main/policy_many_egress/policy_import_and_wait'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/policy_many_egress/policy_import_and_wait: importing policy - and waiting up to 120 seconds to complete'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ cilium policy import -
++ grep Revision:
++ awk '{print $2}'
+ rev=31
+ timeout 120s cilium policy wait 31
+ proxy_test
+ log 'beginning proxy test'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='beginning proxy test'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: beginning proxy test'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ monitor_clear
+ local save=ehxB
+ set +e
+ log 'clearing monitor'
+ local save=hxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='clearing monitor'
+ local stack
+ (( i=4-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main/proxy_test == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test/monitor_clear'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test/monitor_clear: clearing monitor'
+ restore_flag hxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=hxB
+ local flag=u
+ [[ hxB =~ u ]]
+ cp /dev/null /tmp/tmp.w2qWUcHP7n
+ nstat
+ restore_flag ehxB e
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=e
+ [[ ehxB =~ e ]]
+ set -e
+ log 'trying to reach server IPv4 at http://10.15.182.66:80//public from client (expected: 200)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv4 at http://10.15.182.66:80//public from client (expected: 200)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv4 at http://10.15.182.66:80//public from client (expected: 200)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET http://10.15.182.66:80//public
+ RETURN=200
+ [[ 200 != \2\0\0 ]]
+ log 'trying to reach server IPv6 at http://[f00d::a0f:0:0:e884]:80/public from client (expected: 200)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv6 at http://[f00d::a0f:0:0:e884]:80/public from client (expected: 200)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv6 at http://[f00d::a0f:0:0:e884]:80/public from client (expected: 200)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET 'http://[f00d::a0f:0:0:e884]:80/public'
+ RETURN=200
+ [[ 200 != \2\0\0 ]]
+ log 'trying to reach server IPv4 at http://10.15.182.66:80/private from client (expected: 403)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv4 at http://10.15.182.66:80/private from client (expected: 403)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv4 at http://10.15.182.66:80/private from client (expected: 403)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET http://10.15.182.66:80/private
+ RETURN=403
+ [[ 403 != \4\0\3 ]]
+ log 'trying to reach server IPv6 at http://[f00d::a0f:0:0:e884]:80/private from client (expected: 403)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv6 at http://[f00d::a0f:0:0:e884]:80/private from client (expected: 403)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv6 at http://[f00d::a0f:0:0:e884]:80/private from client (expected: 403)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET 'http://[f00d::a0f:0:0:e884]:80/private'
+ RETURN=403
+ [[ 403 != \4\0\3 ]]
+ log 'finished proxy test'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='finished proxy test'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: finished proxy test'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ for policy in "egress" "ingress" "egress_and_ingress" "many_egress" "many_ingress"
+ log +----------------------------------------------------------------------+
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message=+----------------------------------------------------------------------+
+ local stack
+ (( i=2-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main: +----------------------------------------------------------------------+'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ log 'Testing with Policy=many_ingress, Service=none, Conntrack=true'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='Testing with Policy=many_ingress, Service=none, Conntrack=true'
+ local stack
+ (( i=2-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main: Testing with Policy=many_ingress, Service=none, Conntrack=true'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ log +----------------------------------------------------------------------+
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message=+----------------------------------------------------------------------+
+ local stack
+ (( i=2-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main: +----------------------------------------------------------------------+'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ case $policy in
+ policy_many_ingress
+ cilium policy delete policy=test
+ cat
+ policy_import_and_wait -
+ log 'importing policy - and waiting up to 120 seconds to complete'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='importing policy - and waiting up to 120 seconds to complete'
+ local stack
+ (( i=4-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/policy_many_ingress'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main/policy_many_ingress == '' ]]
+ stack='envoy-smoke-test.sh: main/policy_many_ingress/policy_import_and_wait'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/policy_many_ingress/policy_import_and_wait: importing policy - and waiting up to 120 seconds to complete'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ cilium policy import -
++ awk '{print $2}'
++ grep Revision:
+ rev=33
+ timeout 120s cilium policy wait 33
+ proxy_test
+ log 'beginning proxy test'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='beginning proxy test'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: beginning proxy test'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ monitor_clear
+ local save=ehxB
+ set +e
+ log 'clearing monitor'
+ local save=hxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='clearing monitor'
+ local stack
+ (( i=4-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main/proxy_test == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test/monitor_clear'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test/monitor_clear: clearing monitor'
+ restore_flag hxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=hxB
+ local flag=u
+ [[ hxB =~ u ]]
+ cp /dev/null /tmp/tmp.w2qWUcHP7n
+ nstat
+ restore_flag ehxB e
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=e
+ [[ ehxB =~ e ]]
+ set -e
+ log 'trying to reach server IPv4 at http://10.15.182.66:80//public from client (expected: 200)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv4 at http://10.15.182.66:80//public from client (expected: 200)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv4 at http://10.15.182.66:80//public from client (expected: 200)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET http://10.15.182.66:80//public
+ RETURN=200
+ [[ 200 != \2\0\0 ]]
+ log 'trying to reach server IPv6 at http://[f00d::a0f:0:0:e884]:80/public from client (expected: 200)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv6 at http://[f00d::a0f:0:0:e884]:80/public from client (expected: 200)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv6 at http://[f00d::a0f:0:0:e884]:80/public from client (expected: 200)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET 'http://[f00d::a0f:0:0:e884]:80/public'
+ RETURN=200
+ [[ 200 != \2\0\0 ]]
+ log 'trying to reach server IPv4 at http://10.15.182.66:80/private from client (expected: 403)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv4 at http://10.15.182.66:80/private from client (expected: 403)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv4 at http://10.15.182.66:80/private from client (expected: 403)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET http://10.15.182.66:80/private
+ RETURN=403
+ [[ 403 != \4\0\3 ]]
+ log 'trying to reach server IPv6 at http://[f00d::a0f:0:0:e884]:80/private from client (expected: 403)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv6 at http://[f00d::a0f:0:0:e884]:80/private from client (expected: 403)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv6 at http://[f00d::a0f:0:0:e884]:80/private from client (expected: 403)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET 'http://[f00d::a0f:0:0:e884]:80/private'
+ RETURN=403
+ [[ 403 != \4\0\3 ]]
+ log 'finished proxy test'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='finished proxy test'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: finished proxy test'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ for service in "none" "lb"
+ case $service in
+ service_init
+ log 'beginning service init'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='beginning service init'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/service_init'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/service_init: beginning service init'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ cilium service update --frontend 10.0.0.2:80 --id 2233 --backends 10.15.182.66:80 --backends 10.15.57.88:80
+ cilium service update --frontend '[f00d::1:1]:80' --id 2234 --backends '[f00d::a0f:0:0:e884]:80' --backends '[f00d::a0f:0:0:450b]:80'
+ SERVER_IP=f00d::1:1
+ SERVER_IP4=10.0.0.2
+ log 'finished service init'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='finished service init'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/service_init'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/service_init: finished service init'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ for policy in "egress" "ingress" "egress_and_ingress" "many_egress" "many_ingress"
+ log +----------------------------------------------------------------------+
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message=+----------------------------------------------------------------------+
+ local stack
+ (( i=2-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main: +----------------------------------------------------------------------+'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ log 'Testing with Policy=egress, Service=lb, Conntrack=true'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='Testing with Policy=egress, Service=lb, Conntrack=true'
+ local stack
+ (( i=2-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main: Testing with Policy=egress, Service=lb, Conntrack=true'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ log +----------------------------------------------------------------------+
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message=+----------------------------------------------------------------------+
+ local stack
+ (( i=2-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main: +----------------------------------------------------------------------+'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ case $policy in
+ policy_single_egress
+ cilium policy delete policy=test
+ cat
+ policy_import_and_wait -
+ log 'importing policy - and waiting up to 120 seconds to complete'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='importing policy - and waiting up to 120 seconds to complete'
+ local stack
+ (( i=4-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/policy_single_egress'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main/policy_single_egress == '' ]]
+ stack='envoy-smoke-test.sh: main/policy_single_egress/policy_import_and_wait'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/policy_single_egress/policy_import_and_wait: importing policy - and waiting up to 120 seconds to complete'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ cilium policy import -
++ awk '{print $2}'
++ grep Revision:
+ rev=35
+ timeout 120s cilium policy wait 35
+ proxy_test
+ log 'beginning proxy test'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='beginning proxy test'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: beginning proxy test'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ monitor_clear
+ local save=ehxB
+ set +e
+ log 'clearing monitor'
+ local save=hxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='clearing monitor'
+ local stack
+ (( i=4-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main/proxy_test == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test/monitor_clear'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test/monitor_clear: clearing monitor'
+ restore_flag hxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=hxB
+ local flag=u
+ [[ hxB =~ u ]]
+ cp /dev/null /tmp/tmp.w2qWUcHP7n
+ nstat
+ restore_flag ehxB e
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=e
+ [[ ehxB =~ e ]]
+ set -e
+ log 'trying to reach server IPv4 at http://10.0.0.2:80//public from client (expected: 200)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv4 at http://10.0.0.2:80//public from client (expected: 200)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv4 at http://10.0.0.2:80//public from client (expected: 200)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET http://10.0.0.2:80//public
+ RETURN=200
+ [[ 200 != \2\0\0 ]]
+ log 'trying to reach server IPv6 at http://[f00d::1:1]:80/public from client (expected: 200)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv6 at http://[f00d::1:1]:80/public from client (expected: 200)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv6 at http://[f00d::1:1]:80/public from client (expected: 200)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET 'http://[f00d::1:1]:80/public'
+ RETURN=200
+ [[ 200 != \2\0\0 ]]
+ log 'trying to reach server IPv4 at http://10.0.0.2:80/private from client (expected: 403)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv4 at http://10.0.0.2:80/private from client (expected: 403)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv4 at http://10.0.0.2:80/private from client (expected: 403)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET http://10.0.0.2:80/private
+ RETURN=403
+ [[ 403 != \4\0\3 ]]
+ log 'trying to reach server IPv6 at http://[f00d::1:1]:80/private from client (expected: 403)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv6 at http://[f00d::1:1]:80/private from client (expected: 403)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv6 at http://[f00d::1:1]:80/private from client (expected: 403)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET 'http://[f00d::1:1]:80/private'
+ RETURN=403
+ [[ 403 != \4\0\3 ]]
+ log 'finished proxy test'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='finished proxy test'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: finished proxy test'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ for policy in "egress" "ingress" "egress_and_ingress" "many_egress" "many_ingress"
+ log +----------------------------------------------------------------------+
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message=+----------------------------------------------------------------------+
+ local stack
+ (( i=2-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main: +----------------------------------------------------------------------+'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ log 'Testing with Policy=ingress, Service=lb, Conntrack=true'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='Testing with Policy=ingress, Service=lb, Conntrack=true'
+ local stack
+ (( i=2-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main: Testing with Policy=ingress, Service=lb, Conntrack=true'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ log +----------------------------------------------------------------------+
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message=+----------------------------------------------------------------------+
+ local stack
+ (( i=2-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main: +----------------------------------------------------------------------+'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ case $policy in
+ policy_single_ingress
+ cilium policy delete policy=test
+ cat
+ policy_import_and_wait -
+ log 'importing policy - and waiting up to 120 seconds to complete'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='importing policy - and waiting up to 120 seconds to complete'
+ local stack
+ (( i=4-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/policy_single_ingress'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main/policy_single_ingress == '' ]]
+ stack='envoy-smoke-test.sh: main/policy_single_ingress/policy_import_and_wait'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/policy_single_ingress/policy_import_and_wait: importing policy - and waiting up to 120 seconds to complete'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ awk '{print $2}'
++ grep Revision:
++ cilium policy import -
+ rev=37
+ timeout 120s cilium policy wait 37
+ proxy_test
+ log 'beginning proxy test'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='beginning proxy test'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: beginning proxy test'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ monitor_clear
+ local save=ehxB
+ set +e
+ log 'clearing monitor'
+ local save=hxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='clearing monitor'
+ local stack
+ (( i=4-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main/proxy_test == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test/monitor_clear'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test/monitor_clear: clearing monitor'
+ restore_flag hxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=hxB
+ local flag=u
+ [[ hxB =~ u ]]
+ cp /dev/null /tmp/tmp.w2qWUcHP7n
+ nstat
+ restore_flag ehxB e
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=e
+ [[ ehxB =~ e ]]
+ set -e
+ log 'trying to reach server IPv4 at http://10.0.0.2:80//public from client (expected: 200)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv4 at http://10.0.0.2:80//public from client (expected: 200)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv4 at http://10.0.0.2:80//public from client (expected: 200)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET http://10.0.0.2:80//public
+ RETURN=200
+ [[ 200 != \2\0\0 ]]
+ log 'trying to reach server IPv6 at http://[f00d::1:1]:80/public from client (expected: 200)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv6 at http://[f00d::1:1]:80/public from client (expected: 200)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv6 at http://[f00d::1:1]:80/public from client (expected: 200)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET 'http://[f00d::1:1]:80/public'
+ RETURN=200
+ [[ 200 != \2\0\0 ]]
+ log 'trying to reach server IPv4 at http://10.0.0.2:80/private from client (expected: 403)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv4 at http://10.0.0.2:80/private from client (expected: 403)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv4 at http://10.0.0.2:80/private from client (expected: 403)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET http://10.0.0.2:80/private
+ RETURN=403
+ [[ 403 != \4\0\3 ]]
+ log 'trying to reach server IPv6 at http://[f00d::1:1]:80/private from client (expected: 403)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv6 at http://[f00d::1:1]:80/private from client (expected: 403)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv6 at http://[f00d::1:1]:80/private from client (expected: 403)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET 'http://[f00d::1:1]:80/private'
+ RETURN=403
+ [[ 403 != \4\0\3 ]]
+ log 'finished proxy test'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='finished proxy test'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: finished proxy test'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ for policy in "egress" "ingress" "egress_and_ingress" "many_egress" "many_ingress"
+ log +----------------------------------------------------------------------+
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message=+----------------------------------------------------------------------+
+ local stack
+ (( i=2-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main: +----------------------------------------------------------------------+'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ log 'Testing with Policy=egress_and_ingress, Service=lb, Conntrack=true'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='Testing with Policy=egress_and_ingress, Service=lb, Conntrack=true'
+ local stack
+ (( i=2-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main: Testing with Policy=egress_and_ingress, Service=lb, Conntrack=true'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ log +----------------------------------------------------------------------+
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message=+----------------------------------------------------------------------+
+ local stack
+ (( i=2-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main: +----------------------------------------------------------------------+'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ case $policy in
+ policy_egress_and_ingress
+ cilium policy delete policy=test
+ cat
+ policy_import_and_wait -
+ log 'importing policy - and waiting up to 120 seconds to complete'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='importing policy - and waiting up to 120 seconds to complete'
+ local stack
+ (( i=4-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/policy_egress_and_ingress'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main/policy_egress_and_ingress == '' ]]
+ stack='envoy-smoke-test.sh: main/policy_egress_and_ingress/policy_import_and_wait'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/policy_egress_and_ingress/policy_import_and_wait: importing policy - and waiting up to 120 seconds to complete'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ cilium policy import -
++ grep Revision:
++ awk '{print $2}'
+ rev=39
+ timeout 120s cilium policy wait 39
+ proxy_test
+ log 'beginning proxy test'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='beginning proxy test'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: beginning proxy test'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ monitor_clear
+ local save=ehxB
+ set +e
+ log 'clearing monitor'
+ local save=hxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='clearing monitor'
+ local stack
+ (( i=4-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main/proxy_test == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test/monitor_clear'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test/monitor_clear: clearing monitor'
+ restore_flag hxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=hxB
+ local flag=u
+ [[ hxB =~ u ]]
+ cp /dev/null /tmp/tmp.w2qWUcHP7n
+ nstat
+ restore_flag ehxB e
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=e
+ [[ ehxB =~ e ]]
+ set -e
+ log 'trying to reach server IPv4 at http://10.0.0.2:80//public from client (expected: 200)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv4 at http://10.0.0.2:80//public from client (expected: 200)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv4 at http://10.0.0.2:80//public from client (expected: 200)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET http://10.0.0.2:80//public
+ RETURN=200
+ [[ 200 != \2\0\0 ]]
+ log 'trying to reach server IPv6 at http://[f00d::1:1]:80/public from client (expected: 200)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv6 at http://[f00d::1:1]:80/public from client (expected: 200)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv6 at http://[f00d::1:1]:80/public from client (expected: 200)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET 'http://[f00d::1:1]:80/public'
+ RETURN=200
+ [[ 200 != \2\0\0 ]]
+ log 'trying to reach server IPv4 at http://10.0.0.2:80/private from client (expected: 403)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv4 at http://10.0.0.2:80/private from client (expected: 403)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv4 at http://10.0.0.2:80/private from client (expected: 403)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET http://10.0.0.2:80/private
+ RETURN=403
+ [[ 403 != \4\0\3 ]]
+ log 'trying to reach server IPv6 at http://[f00d::1:1]:80/private from client (expected: 403)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv6 at http://[f00d::1:1]:80/private from client (expected: 403)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv6 at http://[f00d::1:1]:80/private from client (expected: 403)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET 'http://[f00d::1:1]:80/private'
+ RETURN=403
+ [[ 403 != \4\0\3 ]]
+ log 'finished proxy test'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='finished proxy test'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: finished proxy test'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ for policy in "egress" "ingress" "egress_and_ingress" "many_egress" "many_ingress"
+ log +----------------------------------------------------------------------+
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message=+----------------------------------------------------------------------+
+ local stack
+ (( i=2-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main: +----------------------------------------------------------------------+'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ log 'Testing with Policy=many_egress, Service=lb, Conntrack=true'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='Testing with Policy=many_egress, Service=lb, Conntrack=true'
+ local stack
+ (( i=2-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main: Testing with Policy=many_egress, Service=lb, Conntrack=true'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ log +----------------------------------------------------------------------+
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message=+----------------------------------------------------------------------+
+ local stack
+ (( i=2-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main: +----------------------------------------------------------------------+'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ case $policy in
+ policy_many_egress
+ cilium policy delete policy=test
+ cat
+ policy_import_and_wait -
+ log 'importing policy - and waiting up to 120 seconds to complete'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='importing policy - and waiting up to 120 seconds to complete'
+ local stack
+ (( i=4-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/policy_many_egress'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main/policy_many_egress == '' ]]
+ stack='envoy-smoke-test.sh: main/policy_many_egress/policy_import_and_wait'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/policy_many_egress/policy_import_and_wait: importing policy - and waiting up to 120 seconds to complete'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ cilium policy import -
++ grep Revision:
++ awk '{print $2}'
+ rev=41
+ timeout 120s cilium policy wait 41
+ proxy_test
+ log 'beginning proxy test'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='beginning proxy test'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: beginning proxy test'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ monitor_clear
+ local save=ehxB
+ set +e
+ log 'clearing monitor'
+ local save=hxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='clearing monitor'
+ local stack
+ (( i=4-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main/proxy_test == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test/monitor_clear'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test/monitor_clear: clearing monitor'
+ restore_flag hxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=hxB
+ local flag=u
+ [[ hxB =~ u ]]
+ cp /dev/null /tmp/tmp.w2qWUcHP7n
+ nstat
+ restore_flag ehxB e
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=e
+ [[ ehxB =~ e ]]
+ set -e
+ log 'trying to reach server IPv4 at http://10.0.0.2:80//public from client (expected: 200)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv4 at http://10.0.0.2:80//public from client (expected: 200)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv4 at http://10.0.0.2:80//public from client (expected: 200)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET http://10.0.0.2:80//public
+ RETURN=200
+ [[ 200 != \2\0\0 ]]
+ log 'trying to reach server IPv6 at http://[f00d::1:1]:80/public from client (expected: 200)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv6 at http://[f00d::1:1]:80/public from client (expected: 200)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv6 at http://[f00d::1:1]:80/public from client (expected: 200)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET 'http://[f00d::1:1]:80/public'
+ RETURN=200
+ [[ 200 != \2\0\0 ]]
+ log 'trying to reach server IPv4 at http://10.0.0.2:80/private from client (expected: 403)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv4 at http://10.0.0.2:80/private from client (expected: 403)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv4 at http://10.0.0.2:80/private from client (expected: 403)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET http://10.0.0.2:80/private
+ RETURN=403
+ [[ 403 != \4\0\3 ]]
+ log 'trying to reach server IPv6 at http://[f00d::1:1]:80/private from client (expected: 403)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv6 at http://[f00d::1:1]:80/private from client (expected: 403)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv6 at http://[f00d::1:1]:80/private from client (expected: 403)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET 'http://[f00d::1:1]:80/private'
+ RETURN=403
+ [[ 403 != \4\0\3 ]]
+ log 'finished proxy test'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='finished proxy test'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: finished proxy test'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ for policy in "egress" "ingress" "egress_and_ingress" "many_egress" "many_ingress"
+ log +----------------------------------------------------------------------+
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message=+----------------------------------------------------------------------+
+ local stack
+ (( i=2-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main: +----------------------------------------------------------------------+'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ log 'Testing with Policy=many_ingress, Service=lb, Conntrack=true'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='Testing with Policy=many_ingress, Service=lb, Conntrack=true'
+ local stack
+ (( i=2-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main: Testing with Policy=many_ingress, Service=lb, Conntrack=true'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ log +----------------------------------------------------------------------+
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message=+----------------------------------------------------------------------+
+ local stack
+ (( i=2-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main: +----------------------------------------------------------------------+'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ case $policy in
+ policy_many_ingress
+ cilium policy delete policy=test
+ cat
+ policy_import_and_wait -
+ log 'importing policy - and waiting up to 120 seconds to complete'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='importing policy - and waiting up to 120 seconds to complete'
+ local stack
+ (( i=4-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/policy_many_ingress'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main/policy_many_ingress == '' ]]
+ stack='envoy-smoke-test.sh: main/policy_many_ingress/policy_import_and_wait'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/policy_many_ingress/policy_import_and_wait: importing policy - and waiting up to 120 seconds to complete'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ cilium policy import -
++ grep Revision:
++ awk '{print $2}'
+ rev=43
+ timeout 120s cilium policy wait 43
+ proxy_test
+ log 'beginning proxy test'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='beginning proxy test'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: beginning proxy test'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ monitor_clear
+ local save=ehxB
+ set +e
+ log 'clearing monitor'
+ local save=hxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='clearing monitor'
+ local stack
+ (( i=4-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main/proxy_test == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test/monitor_clear'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test/monitor_clear: clearing monitor'
+ restore_flag hxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=hxB
+ local flag=u
+ [[ hxB =~ u ]]
+ cp /dev/null /tmp/tmp.w2qWUcHP7n
+ nstat
+ restore_flag ehxB e
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=e
+ [[ ehxB =~ e ]]
+ set -e
+ log 'trying to reach server IPv4 at http://10.0.0.2:80//public from client (expected: 200)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv4 at http://10.0.0.2:80//public from client (expected: 200)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv4 at http://10.0.0.2:80//public from client (expected: 200)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET http://10.0.0.2:80//public
+ RETURN=200
+ [[ 200 != \2\0\0 ]]
+ log 'trying to reach server IPv6 at http://[f00d::1:1]:80/public from client (expected: 200)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv6 at http://[f00d::1:1]:80/public from client (expected: 200)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv6 at http://[f00d::1:1]:80/public from client (expected: 200)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET 'http://[f00d::1:1]:80/public'
+ RETURN=200
+ [[ 200 != \2\0\0 ]]
+ log 'trying to reach server IPv4 at http://10.0.0.2:80/private from client (expected: 403)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv4 at http://10.0.0.2:80/private from client (expected: 403)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv4 at http://10.0.0.2:80/private from client (expected: 403)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET http://10.0.0.2:80/private
+ RETURN=403
+ [[ 403 != \4\0\3 ]]
+ log 'trying to reach server IPv6 at http://[f00d::1:1]:80/private from client (expected: 403)'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='trying to reach server IPv6 at http://[f00d::1:1]:80/private from client (expected: 403)'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: trying to reach server IPv6 at http://[f00d::1:1]:80/private from client (expected: 403)'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
++ docker exec -i client curl -s --output /dev/stderr -w '%{http_code}' --connect-timeout 10 -XGET 'http://[f00d::1:1]:80/private'
+ RETURN=403
+ [[ 403 != \4\0\3 ]]
+ log 'finished proxy test'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='finished proxy test'
+ local stack
+ (( i=3-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ [[ envoy-smoke-test.sh: main == '' ]]
+ stack='envoy-smoke-test.sh: main/proxy_test'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main/proxy_test: finished proxy test'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ log 'deleting all services from Cilium'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='deleting all services from Cilium'
+ local stack
+ (( i=2-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main: deleting all services from Cilium'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ cilium service delete --all
+ log 'deleting all policies from Cilium'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='deleting all policies from Cilium'
+ local stack
+ (( i=2-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main: deleting all policies from Cilium'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ cilium policy delete --all
+ log 'removing containers'
+ local save=ehxB
+ set +u
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ message='removing containers'
+ local stack
+ (( i=2-1  ))
+ (( i>0  ))
+ [[ '' == '' ]]
++ basename test/envoy/envoy-smoke-test.sh
+ stack='envoy-smoke-test.sh: main'
+ (( i--  ))
+ (( i>0  ))
+ echo '----- envoy-smoke-test.sh: main: removing containers'
+ restore_flag ehxB u
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=u
+ [[ ehxB =~ u ]]
+ docker rm -f server1 server2 client
+ test_succeeded envoy-smoke-test
+ check_num_params 1 1
+ local NUM_PARAMS=1
+ local NUM_EXPECTED_PARAMS=1
+ '[' 1 -ne 1 ']'
+ local TEST_NAME=envoy-smoke-test
+ echo ============================================================
+ echo '==                                                        =='
+ echo '==                                                        =='
+ echo '==                                                        =='
+ echo '    envoy-smoke-test succeeded!'
+ echo '==                                                        =='
+ echo '==                                                        =='
+ echo '==                                                        =='
+ echo ============================================================
+ finish_test
+ cleanup
+ monitor_stop
+ local save=ehxB
+ set +e
+ '[' '!' -z 37515 ']'
+ kill 37515
+ restore_flag ehxB e
+ check_num_params 2 2
+ local NUM_PARAMS=2
+ local NUM_EXPECTED_PARAMS=2
+ '[' 2 -ne 2 ']'
+ local save=ehxB
+ local flag=e
+ [[ ehxB =~ e ]]
+ set -e
+ echo 'Tip: Add '\''--debug-verbose=flow'\'' into cilium options in /etc/sysconfig/cilium to get Envoy debug logging.'
